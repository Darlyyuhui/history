<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiangxun.atms.module.eventalarm.mapper.AlaICabLogMapper">
  <resultMap id="BaseResultMap" type="com.xiangxun.atms.module.eventalarm.domain.AlaICabLog">
    <result column="ID" jdbcType="VARCHAR" property="id" />
    <result column="SN" jdbcType="VARCHAR" property="sn" />
    <result column="IP" jdbcType="VARCHAR" property="ip" />
    <result column="EVENT_TIME" jdbcType="TIMESTAMP" property="eventTime" />
    <result column="SENSOR_TYPE" jdbcType="DECIMAL" property="sensorType" />
    <result column="MESSAGE" jdbcType="OTHER" property="message" />
    <result column="MESSAGE_EX" jdbcType="OTHER" property="messageEx" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
    <result column="ACTUALVALUE" jdbcType="DECIMAL" property="actualvalue" />
    <result column="POWERSUPPLY" jdbcType="DECIMAL" property="powersupply" />
    <result column="VOLTAGEVALUE" jdbcType="DECIMAL" property="voltagevalue" />
    <result column="CURRENTVALUE" jdbcType="DECIMAL" property="currentvalue" />
    <result column="CHANNEL_NAME" jdbcType="VARCHAR" property="channelName" />
    <association property="assetinfo"  resultMap="BaseResultMap1"  />
  </resultMap>
  <resultMap type="com.xiangxun.atms.module.property.domain.AssetInfo" id="BaseResultMap1">
    <result column="ASSETNAME" property="assetname" jdbcType="VARCHAR" />
    <result column="INSTALLPLACE" property="installplace" jdbcType="VARCHAR" />
    <result column="IP" property="ip" jdbcType="VARCHAR" />

  </resultMap>
  
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xiangxun.atms.module.property.domain.AlaICabLogWithBLOBs">
    <result column="PHOTO1" jdbcType="BLOB" property="photo1" />
    <result column="PHOTO2" jdbcType="BLOB" property="photo2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, SN, IP, EVENT_TIME, SENSOR_TYPE, MESSAGE, MESSAGE_EX, STATUS, ACTUALVALUE, POWERSUPPLY, 
    VOLTAGEVALUE, CURRENTVALUE, CHANNEL_NAME
  </sql>
  <sql id="Blob_Column_List">
    PHOTO1, PHOTO2
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xiangxun.atms.module.property.domain.AlaICabLogSearch" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ALARM_ICABINET_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xiangxun.atms.module.property.domain.AlaICabLogSearch" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ALARM_ICABINET_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xiangxun.atms.module.property.domain.AlaICabLogSearch">
    delete from ALARM_ICABINET_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="ID" keyProperty="id" parameterType="com.xiangxun.atms.module.property.domain.AlaICabLogWithBLOBs" useGeneratedKeys="true">
    insert into ALARM_ICABINET_LOG (SN, IP, EVENT_TIME, 
      SENSOR_TYPE, MESSAGE, MESSAGE_EX, 
      STATUS, ACTUALVALUE, POWERSUPPLY, 
      VOLTAGEVALUE, CURRENTVALUE, CHANNEL_NAME, 
      PHOTO1, PHOTO2)
    values (#{sn,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{eventTime,jdbcType=DATE}, 
      #{sensorType,jdbcType=DECIMAL}, #{message,jdbcType=OTHER}, #{messageEx,jdbcType=OTHER}, 
      #{status,jdbcType=DECIMAL}, #{actualvalue,jdbcType=DECIMAL}, #{powersupply,jdbcType=DECIMAL}, 
      #{voltagevalue,jdbcType=DECIMAL}, #{currentvalue,jdbcType=DECIMAL}, #{channelName,jdbcType=VARCHAR}, 
      #{photo1,jdbcType=BLOB}, #{photo2,jdbcType=BLOB})
  </insert>
  <insert id="insertSelective" keyColumn="ID" keyProperty="id" parameterType="com.xiangxun.atms.module.property.domain.AlaICabLogWithBLOBs" useGeneratedKeys="true">
    insert into ALARM_ICABINET_LOG
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sn != null">
        SN,
      </if>
      <if test="ip != null">
        IP,
      </if>
      <if test="eventTime != null">
        EVENT_TIME,
      </if>
      <if test="sensorType != null">
        SENSOR_TYPE,
      </if>
      <if test="message != null">
        MESSAGE,
      </if>
      <if test="messageEx != null">
        MESSAGE_EX,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="actualvalue != null">
        ACTUALVALUE,
      </if>
      <if test="powersupply != null">
        POWERSUPPLY,
      </if>
      <if test="voltagevalue != null">
        VOLTAGEVALUE,
      </if>
      <if test="currentvalue != null">
        CURRENTVALUE,
      </if>
      <if test="channelName != null">
        CHANNEL_NAME,
      </if>
      <if test="photo1 != null">
        PHOTO1,
      </if>
      <if test="photo2 != null">
        PHOTO2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="eventTime != null">
        #{eventTime,jdbcType=DATE},
      </if>
      <if test="sensorType != null">
        #{sensorType,jdbcType=DECIMAL},
      </if>
      <if test="message != null">
        #{message,jdbcType=OTHER},
      </if>
      <if test="messageEx != null">
        #{messageEx,jdbcType=OTHER},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="actualvalue != null">
        #{actualvalue,jdbcType=DECIMAL},
      </if>
      <if test="powersupply != null">
        #{powersupply,jdbcType=DECIMAL},
      </if>
      <if test="voltagevalue != null">
        #{voltagevalue,jdbcType=DECIMAL},
      </if>
      <if test="currentvalue != null">
        #{currentvalue,jdbcType=DECIMAL},
      </if>
      <if test="channelName != null">
        #{channelName,jdbcType=VARCHAR},
      </if>
      <if test="photo1 != null">
        #{photo1,jdbcType=BLOB},
      </if>
      <if test="photo2 != null">
        #{photo2,jdbcType=BLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiangxun.atms.module.property.domain.AlaICabLogSearch" resultType="java.lang.Long">
    select count(*) from ALARM_ICABINET_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ALARM_ICABINET_LOG
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.sn != null">
        SN = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        IP = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.eventTime != null">
        EVENT_TIME = #{record.eventTime,jdbcType=DATE},
      </if>
      <if test="record.sensorType != null">
        SENSOR_TYPE = #{record.sensorType,jdbcType=DECIMAL},
      </if>
      <if test="record.message != null">
        MESSAGE = #{record.message,jdbcType=OTHER},
      </if>
      <if test="record.messageEx != null">
        MESSAGE_EX = #{record.messageEx,jdbcType=OTHER},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=DECIMAL},
      </if>
      <if test="record.actualvalue != null">
        ACTUALVALUE = #{record.actualvalue,jdbcType=DECIMAL},
      </if>
      <if test="record.powersupply != null">
        POWERSUPPLY = #{record.powersupply,jdbcType=DECIMAL},
      </if>
      <if test="record.voltagevalue != null">
        VOLTAGEVALUE = #{record.voltagevalue,jdbcType=DECIMAL},
      </if>
      <if test="record.currentvalue != null">
        CURRENTVALUE = #{record.currentvalue,jdbcType=DECIMAL},
      </if>
      <if test="record.channelName != null">
        CHANNEL_NAME = #{record.channelName,jdbcType=VARCHAR},
      </if>
      <if test="record.photo1 != null">
        PHOTO1 = #{record.photo1,jdbcType=BLOB},
      </if>
      <if test="record.photo2 != null">
        PHOTO2 = #{record.photo2,jdbcType=BLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update ALARM_ICABINET_LOG
    set ID = #{record.id,jdbcType=VARCHAR},
      SN = #{record.sn,jdbcType=VARCHAR},
      IP = #{record.ip,jdbcType=VARCHAR},
      EVENT_TIME = #{record.eventTime,jdbcType=DATE},
      SENSOR_TYPE = #{record.sensorType,jdbcType=DECIMAL},
      MESSAGE = #{record.message,jdbcType=OTHER},
      MESSAGE_EX = #{record.messageEx,jdbcType=OTHER},
      STATUS = #{record.status,jdbcType=DECIMAL},
      ACTUALVALUE = #{record.actualvalue,jdbcType=DECIMAL},
      POWERSUPPLY = #{record.powersupply,jdbcType=DECIMAL},
      VOLTAGEVALUE = #{record.voltagevalue,jdbcType=DECIMAL},
      CURRENTVALUE = #{record.currentvalue,jdbcType=DECIMAL},
      CHANNEL_NAME = #{record.channelName,jdbcType=VARCHAR},
      PHOTO1 = #{record.photo1,jdbcType=BLOB},
      PHOTO2 = #{record.photo2,jdbcType=BLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ALARM_ICABINET_LOG
    set ID = #{record.id,jdbcType=VARCHAR},
      SN = #{record.sn,jdbcType=VARCHAR},
      IP = #{record.ip,jdbcType=VARCHAR},
      EVENT_TIME = #{record.eventTime,jdbcType=DATE},
      SENSOR_TYPE = #{record.sensorType,jdbcType=DECIMAL},
      MESSAGE = #{record.message,jdbcType=OTHER},
      MESSAGE_EX = #{record.messageEx,jdbcType=OTHER},
      STATUS = #{record.status,jdbcType=DECIMAL},
      ACTUALVALUE = #{record.actualvalue,jdbcType=DECIMAL},
      POWERSUPPLY = #{record.powersupply,jdbcType=DECIMAL},
      VOLTAGEVALUE = #{record.voltagevalue,jdbcType=DECIMAL},
      CURRENTVALUE = #{record.currentvalue,jdbcType=DECIMAL},
      CHANNEL_NAME = #{record.channelName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
  	select p.installplace, p.assetname, p.ip,t.event_time, t.id 
  	  from alarm_icabinet_log t join property_icabinet_info s on t.sn=s.sn
                                join property_asset_info p on s.id=p.deviceid
     where t.sensor_type=0 and t.channel_name='4' 
      <if test="@Ognl@isNotEmpty(assetname)" >
         and p.assetname LIKE '%${assetname}%'
      </if>
      <if test="@Ognl@isNotEmpty(installplace)" >
         and p.installplace LIKE '%${installplace}%'
      </if>
      
      <if test="@Ognl@isNotEmpty(ip)" >
         and p.IP LIKE '%${ip}%'
      </if>                                   
      order by t.event_time desc
  	
  </select>
  <select id="selectAllcount"  resultType="java.lang.Integer" >
    select count(*)
  	  from alarm_icabinet_log t join property_icabinet_info s on t.sn=s.sn
                                join property_asset_info p on s.id=p.deviceid
    where t.sensor_type=0 and t.channel_name='4' 
      <if test="@Ognl@isNotEmpty(assetname)" >         
         and p.assetname LIKE '%${assetname}%'
      </if>
      <if test="@Ognl@isNotEmpty(installplace)" >
         and p.installplace LIKE '%${installplace}%'
      </if>
      
      <if test="@Ognl@isNotEmpty(ip)" >
         and p.IP LIKE '%${ip}%'
      </if>       
    
  </select>
  <select id="getPhoto1ByID" resultType="AlaICabLogWithBLOBs">
  	select photo1 from alarm_icabinet_log where id=#{id}
  	
  </select>
  <select id="getPhoto2ByID" resultType="AlaICabLogWithBLOBs">
  	select photo2 from alarm_icabinet_log where id=#{id}
  	
  </select> 
  
</mapper>