<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiangxun.atms.module.property.mapper.DeviceInfoMapper" >
  <resultMap id="BaseResultMap" type="com.xiangxun.atms.module.property.domain.DeviceInfo" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="ORG_ID" property="orgId" jdbcType="VARCHAR" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="IP" property="ip" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="COMPANY_ID" property="companyId" jdbcType="VARCHAR" />
    <result column="FTP_ID" property="ftpId" jdbcType="VARCHAR" />
    <result column="ROAD_ID" property="roadId" jdbcType="VARCHAR" />
    <result column="ISSHOW" property="isshow" jdbcType="VARCHAR" />
    <result column="BUILDTIME" property="buildtime" jdbcType="TIMESTAMP" />
    <result column="BUILDISP_ID" property="buildispId" jdbcType="VARCHAR" />
    <result column="BUILDNETWORK_ID" property="buildnetworkId" jdbcType="VARCHAR" />
    <result column="POWERSOURCE" property="powersource" jdbcType="VARCHAR" />
    <result column="TIMEOUT" property="timeout" jdbcType="DECIMAL" />
    <result column="ISBLACKANALYSE" property="isblackanalyse" jdbcType="VARCHAR" />
    <result column="PHOTO1" property="photo1" jdbcType="VARCHAR" />
    <result column="PHOTO2" property="photo2" jdbcType="VARCHAR" />
    <result column="PHOTO3" property="photo3" jdbcType="VARCHAR" />
    <result column="IMPORTCODE" property="importcode" jdbcType="VARCHAR" />
    <result column="LICENSE" property="license" jdbcType="VARCHAR" />
    <result column="LASTDATATIME" property="lastdatatime" jdbcType="TIMESTAMP" />
    <result column="PICMIX_ID" property="picmixId" jdbcType="VARCHAR" />
    <result column="TOPORGCODE" property="toporgcode" jdbcType="VARCHAR" />
    <result column="DEVICETYPECODE" property="devicetypecode" jdbcType="VARCHAR" />
    <result column="TRADEMARK" property="trademark" jdbcType="VARCHAR" />
    <result column="PATTERN" property="pattern" jdbcType="VARCHAR" />
    <result column="EFFICACIOUS_STIME" property="efficaciousStime" jdbcType="TIMESTAMP" />
    <result column="EFFICACIOUS_ETIME" property="efficaciousEtime" jdbcType="TIMESTAMP" />
    <result column="INSPECTORG" property="inspectorg" jdbcType="VARCHAR" />
    <result column="INSPECTTIME" property="inspecttime" jdbcType="TIMESTAMP" />
    <result column="INSPECTNUMBER" property="inspectnumber" jdbcType="VARCHAR" />
    <result column="MAPX" property="mapx" jdbcType="VARCHAR" />
    <result column="MAPY" property="mapy" jdbcType="VARCHAR" />
    <result column="VIDEO_CODE" property="videoCode" jdbcType="VARCHAR" />
    <result column="ISSEND" property="issend" jdbcType="VARCHAR" />
    <result column="INSERTTIME" property="inserttime" jdbcType="TIMESTAMP" />
    <result column="NOTE" property="note" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="FACTORY_ID" property="factoryId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ORG_ID, CODE, IP, NAME, COMPANY_ID, FTP_ID, ROAD_ID, ISSHOW, BUILDTIME, BUILDISP_ID, 
    BUILDNETWORK_ID, POWERSOURCE, TIMEOUT, ISBLACKANALYSE, PHOTO1, PHOTO2, PHOTO3, IMPORTCODE, 
    LICENSE, LASTDATATIME, PICMIX_ID, TOPORGCODE, DEVICETYPECODE, TRADEMARK, PATTERN, 
    EFFICACIOUS_STIME, EFFICACIOUS_ETIME, INSPECTORG, INSPECTTIME, INSPECTNUMBER, MAPX, 
    MAPY, VIDEO_CODE, ISSEND, INSERTTIME, NOTE, STATUS, FACTORY_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xiangxun.atms.module.property.domain.DeviceInfoSearch" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PROPERTY_DEVICE_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PROPERTY_DEVICE_INFO
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PROPERTY_DEVICE_INFO
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiangxun.atms.module.property.domain.DeviceInfoSearch" >
    delete from PROPERTY_DEVICE_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiangxun.atms.module.property.domain.DeviceInfo" >
    insert into PROPERTY_DEVICE_INFO (ID, ORG_ID, CODE, 
      IP, NAME, COMPANY_ID, 
      FTP_ID, ROAD_ID, ISSHOW, 
      BUILDTIME, BUILDISP_ID, BUILDNETWORK_ID, 
      POWERSOURCE, TIMEOUT, ISBLACKANALYSE, 
      PHOTO1, PHOTO2, PHOTO3, 
      IMPORTCODE, LICENSE, LASTDATATIME, 
      PICMIX_ID, TOPORGCODE, DEVICETYPECODE, 
      TRADEMARK, PATTERN, EFFICACIOUS_STIME, 
      EFFICACIOUS_ETIME, INSPECTORG, INSPECTTIME, 
      INSPECTNUMBER, MAPX, MAPY, 
      VIDEO_CODE, ISSEND, INSERTTIME, 
      NOTE, STATUS, FACTORY_ID
      )
    values (#{id,jdbcType=VARCHAR}, #{orgId,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, 
      #{ftpId,jdbcType=VARCHAR}, #{roadId,jdbcType=VARCHAR}, #{isshow,jdbcType=VARCHAR}, 
      #{buildtime,jdbcType=TIMESTAMP}, #{buildispId,jdbcType=VARCHAR}, #{buildnetworkId,jdbcType=VARCHAR}, 
      #{powersource,jdbcType=VARCHAR}, #{timeout,jdbcType=DECIMAL}, #{isblackanalyse,jdbcType=VARCHAR}, 
      #{photo1,jdbcType=VARCHAR}, #{photo2,jdbcType=VARCHAR}, #{photo3,jdbcType=VARCHAR}, 
      #{importcode,jdbcType=VARCHAR}, #{license,jdbcType=VARCHAR}, #{lastdatatime,jdbcType=TIMESTAMP}, 
      #{picmixId,jdbcType=VARCHAR}, #{toporgcode,jdbcType=VARCHAR}, #{devicetypecode,jdbcType=VARCHAR}, 
      #{trademark,jdbcType=VARCHAR}, #{pattern,jdbcType=VARCHAR}, #{efficaciousStime,jdbcType=TIMESTAMP}, 
      #{efficaciousEtime,jdbcType=TIMESTAMP}, #{inspectorg,jdbcType=VARCHAR}, #{inspecttime,jdbcType=TIMESTAMP}, 
      #{inspectnumber,jdbcType=VARCHAR}, #{mapx,jdbcType=VARCHAR}, #{mapy,jdbcType=VARCHAR}, 
      #{videoCode,jdbcType=VARCHAR}, #{issend,jdbcType=VARCHAR}, #{inserttime,jdbcType=TIMESTAMP}, 
      #{note,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{factoryId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiangxun.atms.module.property.domain.DeviceInfo" >
    insert into PROPERTY_DEVICE_INFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="@Ognl@isNotEmpty(id)" >
        ID,
      </if>
      <if test="@Ognl@isNotEmpty(orgId)" >
        ORG_ID,
      </if>
      <if test="@Ognl@isNotEmpty(code)" >
        CODE,
      </if>
      <if test="@Ognl@isNotEmpty(ip)" >
        IP,
      </if>
      <if test="@Ognl@isNotEmpty(name)" >
        NAME,
      </if>
      <if test="@Ognl@isNotEmpty(companyId)" >
        COMPANY_ID,
      </if>
      <if test="@Ognl@isNotEmpty(ftpId)" >
        FTP_ID,
      </if>
      <if test="@Ognl@isNotEmpty(roadId)" >
        ROAD_ID,
      </if>
      <if test="@Ognl@isNotEmpty(isshow)" >
        ISSHOW,
      </if>
      <if test="@Ognl@isNotEmpty(buildtime)" >
        BUILDTIME,
      </if>
      <if test="@Ognl@isNotEmpty(buildispId)" >
        BUILDISP_ID,
      </if>
      <if test="@Ognl@isNotEmpty(buildnetworkId)" >
        BUILDNETWORK_ID,
      </if>
      <if test="@Ognl@isNotEmpty(powersource)" >
        POWERSOURCE,
      </if>
      <if test="@Ognl@isNotEmpty(timeout)" >
        TIMEOUT,
      </if>
      <if test="@Ognl@isNotEmpty(isblackanalyse)" >
        ISBLACKANALYSE,
      </if>
      <if test="@Ognl@isNotEmpty(photo1)" >
        PHOTO1,
      </if>
      <if test="@Ognl@isNotEmpty(photo2)" >
        PHOTO2,
      </if>
      <if test="@Ognl@isNotEmpty(photo3)" >
        PHOTO3,
      </if>
      <if test="@Ognl@isNotEmpty(importcode)" >
        IMPORTCODE,
      </if>
      <if test="@Ognl@isNotEmpty(license)" >
        LICENSE,
      </if>
      <if test="@Ognl@isNotEmpty(lastdatatime)" >
        LASTDATATIME,
      </if>
      <if test="@Ognl@isNotEmpty(picmixId)" >
        PICMIX_ID,
      </if>
      <if test="@Ognl@isNotEmpty(toporgcode)" >
        TOPORGCODE,
      </if>
      <if test="@Ognl@isNotEmpty(devicetypecode)" >
        DEVICETYPECODE,
      </if>
      <if test="@Ognl@isNotEmpty(trademark)" >
        TRADEMARK,
      </if>
      <if test="@Ognl@isNotEmpty(pattern)" >
        PATTERN,
      </if>
      <if test="@Ognl@isNotEmpty(efficaciousStime)" >
        EFFICACIOUS_STIME,
      </if>
      <if test="@Ognl@isNotEmpty(efficaciousEtime)" >
        EFFICACIOUS_ETIME,
      </if>
      <if test="@Ognl@isNotEmpty(inspectorg)" >
        INSPECTORG,
      </if>
      <if test="@Ognl@isNotEmpty(inspecttime)" >
        INSPECTTIME,
      </if>
      <if test="@Ognl@isNotEmpty(inspectnumber)" >
        INSPECTNUMBER,
      </if>
      <if test="@Ognl@isNotEmpty(mapx)" >
        MAPX,
      </if>
      <if test="@Ognl@isNotEmpty(mapy)" >
        MAPY,
      </if>
      <if test="@Ognl@isNotEmpty(videoCode)" >
        VIDEO_CODE,
      </if>
      <if test="@Ognl@isNotEmpty(issend)" >
        ISSEND,
      </if>
      <if test="@Ognl@isNotEmpty(inserttime)" >
        INSERTTIME,
      </if>
      <if test="@Ognl@isNotEmpty(note)" >
        NOTE,
      </if>
      <if test="@Ognl@isNotEmpty(status)" >
        STATUS,
      </if>
      <if test="@Ognl@isNotEmpty(factoryId)" >
        FACTORY_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="@Ognl@isNotEmpty(id)" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(orgId)" >
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(code)" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(ip)" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(name)" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(companyId)" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(ftpId)" >
        #{ftpId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(roadId)" >
        #{roadId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(isshow)" >
        #{isshow,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(buildtime)" >
        #{buildtime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(buildispId)" >
        #{buildispId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(buildnetworkId)" >
        #{buildnetworkId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(powersource)" >
        #{powersource,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(timeout)" >
        #{timeout,jdbcType=DECIMAL},
      </if>
      <if test="@Ognl@isNotEmpty(isblackanalyse)" >
        #{isblackanalyse,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(photo1)" >
        #{photo1,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(photo2)" >
        #{photo2,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(photo3)" >
        #{photo3,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(importcode)" >
        #{importcode,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(license)" >
        #{license,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(lastdatatime)" >
        #{lastdatatime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(picmixId)" >
        #{picmixId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(toporgcode)" >
        #{toporgcode,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(devicetypecode)" >
        #{devicetypecode,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(trademark)" >
        #{trademark,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(pattern)" >
        #{pattern,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(efficaciousStime)" >
        #{efficaciousStime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(efficaciousEtime)" >
        #{efficaciousEtime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(inspectorg)" >
        #{inspectorg,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(inspecttime)" >
        #{inspecttime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(inspectnumber)" >
        #{inspectnumber,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(mapx)" >
        #{mapx,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(mapy)" >
        #{mapy,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(videoCode)" >
        #{videoCode,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(issend)" >
        #{issend,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(inserttime)" >
        #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(note)" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(status)" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(factoryId)" >
        #{factoryId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiangxun.atms.module.property.domain.DeviceInfoSearch" resultType="java.lang.Integer" >
    select count(*) from PROPERTY_DEVICE_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PROPERTY_DEVICE_INFO
    <set >
      <if test="@Ognl@isNotEmpty(record.id)" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.orgId)" >
        ORG_ID = #{record.orgId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.code)" >
        CODE = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.ip)" >
        IP = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.name)" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.companyId)" >
        COMPANY_ID = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.ftpId)" >
        FTP_ID = #{record.ftpId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.roadId)" >
        ROAD_ID = #{record.roadId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.isshow)" >
        ISSHOW = #{record.isshow,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.buildtime)" >
        BUILDTIME = #{record.buildtime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(record.buildispId)" >
        BUILDISP_ID = #{record.buildispId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.buildnetworkId)" >
        BUILDNETWORK_ID = #{record.buildnetworkId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.powersource)" >
        POWERSOURCE = #{record.powersource,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.timeout)" >
        TIMEOUT = #{record.timeout,jdbcType=DECIMAL},
      </if>
      <if test="@Ognl@isNotEmpty(record.isblackanalyse)" >
        ISBLACKANALYSE = #{record.isblackanalyse,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.photo1)" >
        PHOTO1 = #{record.photo1,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.photo2)" >
        PHOTO2 = #{record.photo2,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.photo3)" >
        PHOTO3 = #{record.photo3,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.importcode)" >
        IMPORTCODE = #{record.importcode,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.license)" >
        LICENSE = #{record.license,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.lastdatatime)" >
        LASTDATATIME = #{record.lastdatatime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(record.picmixId)" >
        PICMIX_ID = #{record.picmixId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.toporgcode)" >
        TOPORGCODE = #{record.toporgcode,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.devicetypecode)" >
        DEVICETYPECODE = #{record.devicetypecode,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.trademark)" >
        TRADEMARK = #{record.trademark,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.pattern)" >
        PATTERN = #{record.pattern,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.efficaciousStime)" >
        EFFICACIOUS_STIME = #{record.efficaciousStime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(record.efficaciousEtime)" >
        EFFICACIOUS_ETIME = #{record.efficaciousEtime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(record.inspectorg)" >
        INSPECTORG = #{record.inspectorg,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.inspecttime)" >
        INSPECTTIME = #{record.inspecttime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(record.inspectnumber)" >
        INSPECTNUMBER = #{record.inspectnumber,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.mapx)" >
        MAPX = #{record.mapx,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.mapy)" >
        MAPY = #{record.mapy,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.videoCode)" >
        VIDEO_CODE = #{record.videoCode,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.issend)" >
        ISSEND = #{record.issend,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.inserttime)" >
        INSERTTIME = #{record.inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(record.note)" >
        NOTE = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.status)" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.factoryId)" >
        FACTORY_ID = #{record.factoryId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PROPERTY_DEVICE_INFO
    set ID = #{record.id,jdbcType=VARCHAR},
      ORG_ID = #{record.orgId,jdbcType=VARCHAR},
      CODE = #{record.code,jdbcType=VARCHAR},
      IP = #{record.ip,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      COMPANY_ID = #{record.companyId,jdbcType=VARCHAR},
      FTP_ID = #{record.ftpId,jdbcType=VARCHAR},
      ROAD_ID = #{record.roadId,jdbcType=VARCHAR},
      ISSHOW = #{record.isshow,jdbcType=VARCHAR},
      BUILDTIME = #{record.buildtime,jdbcType=TIMESTAMP},
      BUILDISP_ID = #{record.buildispId,jdbcType=VARCHAR},
      BUILDNETWORK_ID = #{record.buildnetworkId,jdbcType=VARCHAR},
      POWERSOURCE = #{record.powersource,jdbcType=VARCHAR},
      TIMEOUT = #{record.timeout,jdbcType=DECIMAL},
      ISBLACKANALYSE = #{record.isblackanalyse,jdbcType=VARCHAR},
      PHOTO1 = #{record.photo1,jdbcType=VARCHAR},
      PHOTO2 = #{record.photo2,jdbcType=VARCHAR},
      PHOTO3 = #{record.photo3,jdbcType=VARCHAR},
      IMPORTCODE = #{record.importcode,jdbcType=VARCHAR},
      LICENSE = #{record.license,jdbcType=VARCHAR},
      LASTDATATIME = #{record.lastdatatime,jdbcType=TIMESTAMP},
      PICMIX_ID = #{record.picmixId,jdbcType=VARCHAR},
      TOPORGCODE = #{record.toporgcode,jdbcType=VARCHAR},
      DEVICETYPECODE = #{record.devicetypecode,jdbcType=VARCHAR},
      TRADEMARK = #{record.trademark,jdbcType=VARCHAR},
      PATTERN = #{record.pattern,jdbcType=VARCHAR},
      EFFICACIOUS_STIME = #{record.efficaciousStime,jdbcType=TIMESTAMP},
      EFFICACIOUS_ETIME = #{record.efficaciousEtime,jdbcType=TIMESTAMP},
      INSPECTORG = #{record.inspectorg,jdbcType=VARCHAR},
      INSPECTTIME = #{record.inspecttime,jdbcType=TIMESTAMP},
      INSPECTNUMBER = #{record.inspectnumber,jdbcType=VARCHAR},
      MAPX = #{record.mapx,jdbcType=VARCHAR},
      MAPY = #{record.mapy,jdbcType=VARCHAR},
      VIDEO_CODE = #{record.videoCode,jdbcType=VARCHAR},
      ISSEND = #{record.issend,jdbcType=VARCHAR},
      INSERTTIME = #{record.inserttime,jdbcType=TIMESTAMP},
      NOTE = #{record.note,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      FACTORY_ID = #{record.factoryId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiangxun.atms.module.property.domain.DeviceInfo" >
    update PROPERTY_DEVICE_INFO
    <set >
      <if test="@Ognl@isNotEmpty(orgId)" >
        ORG_ID = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(code)" >
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(ip)" >
        IP = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(name)" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(companyId)" >
        COMPANY_ID = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(ftpId)" >
        FTP_ID = #{ftpId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(roadId)" >
        ROAD_ID = #{roadId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(isshow)" >
        ISSHOW = #{isshow,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(buildtime)" >
        BUILDTIME = #{buildtime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(buildispId)" >
        BUILDISP_ID = #{buildispId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(buildnetworkId)" >
        BUILDNETWORK_ID = #{buildnetworkId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(powersource)" >
        POWERSOURCE = #{powersource,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(timeout)" >
        TIMEOUT = #{timeout,jdbcType=DECIMAL},
      </if>
      <if test="@Ognl@isNotEmpty(isblackanalyse)" >
        ISBLACKANALYSE = #{isblackanalyse,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(photo1)" >
        PHOTO1 = #{photo1,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(photo2)" >
        PHOTO2 = #{photo2,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(photo3)" >
        PHOTO3 = #{photo3,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(importcode)" >
        IMPORTCODE = #{importcode,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(license)" >
        LICENSE = #{license,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(lastdatatime)" >
        LASTDATATIME = #{lastdatatime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(picmixId)" >
        PICMIX_ID = #{picmixId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(toporgcode)" >
        TOPORGCODE = #{toporgcode,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(devicetypecode)" >
        DEVICETYPECODE = #{devicetypecode,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(trademark)" >
        TRADEMARK = #{trademark,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(pattern)" >
        PATTERN = #{pattern,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(efficaciousStime)" >
        EFFICACIOUS_STIME = #{efficaciousStime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(efficaciousEtime)" >
        EFFICACIOUS_ETIME = #{efficaciousEtime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(inspectorg)" >
        INSPECTORG = #{inspectorg,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(inspecttime)" >
        INSPECTTIME = #{inspecttime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(inspectnumber)" >
        INSPECTNUMBER = #{inspectnumber,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(mapx)" >
        MAPX = #{mapx,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(mapy)" >
        MAPY = #{mapy,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(videoCode)" >
        VIDEO_CODE = #{videoCode,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(issend)" >
        ISSEND = #{issend,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(inserttime)" >
        INSERTTIME = #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(note)" >
        NOTE = #{note,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(status)" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(factoryId)" >
        FACTORY_ID = #{factoryId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiangxun.atms.module.property.domain.DeviceInfo" >
    update PROPERTY_DEVICE_INFO
    set ORG_ID = #{orgId,jdbcType=VARCHAR},
      CODE = #{code,jdbcType=VARCHAR},
      IP = #{ip,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      COMPANY_ID = #{companyId,jdbcType=VARCHAR},
      FTP_ID = #{ftpId,jdbcType=VARCHAR},
      ROAD_ID = #{roadId,jdbcType=VARCHAR},
      ISSHOW = #{isshow,jdbcType=VARCHAR},
      BUILDTIME = #{buildtime,jdbcType=TIMESTAMP},
      BUILDISP_ID = #{buildispId,jdbcType=VARCHAR},
      BUILDNETWORK_ID = #{buildnetworkId,jdbcType=VARCHAR},
      POWERSOURCE = #{powersource,jdbcType=VARCHAR},
      TIMEOUT = #{timeout,jdbcType=DECIMAL},
      ISBLACKANALYSE = #{isblackanalyse,jdbcType=VARCHAR},
      PHOTO1 = #{photo1,jdbcType=VARCHAR},
      PHOTO2 = #{photo2,jdbcType=VARCHAR},
      PHOTO3 = #{photo3,jdbcType=VARCHAR},
      IMPORTCODE = #{importcode,jdbcType=VARCHAR},
      LICENSE = #{license,jdbcType=VARCHAR},
      LASTDATATIME = #{lastdatatime,jdbcType=TIMESTAMP},
      PICMIX_ID = #{picmixId,jdbcType=VARCHAR},
      TOPORGCODE = #{toporgcode,jdbcType=VARCHAR},
      DEVICETYPECODE = #{devicetypecode,jdbcType=VARCHAR},
      TRADEMARK = #{trademark,jdbcType=VARCHAR},
      PATTERN = #{pattern,jdbcType=VARCHAR},
      EFFICACIOUS_STIME = #{efficaciousStime,jdbcType=TIMESTAMP},
      EFFICACIOUS_ETIME = #{efficaciousEtime,jdbcType=TIMESTAMP},
      INSPECTORG = #{inspectorg,jdbcType=VARCHAR},
      INSPECTTIME = #{inspecttime,jdbcType=TIMESTAMP},
      INSPECTNUMBER = #{inspectnumber,jdbcType=VARCHAR},
      MAPX = #{mapx,jdbcType=VARCHAR},
      MAPY = #{mapy,jdbcType=VARCHAR},
      VIDEO_CODE = #{videoCode,jdbcType=VARCHAR},
      ISSEND = #{issend,jdbcType=VARCHAR},
      INSERTTIME = #{inserttime,jdbcType=TIMESTAMP},
      NOTE = #{note,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      FACTORY_ID = #{factoryId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select id="getListByCondition" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
     from PROPERTY_DEVICE_INFO
    <where >
      <if test="@Ognl@isNotEmpty(orgs)" >
         and ${orgs}
      </if>
      <if test="@Ognl@isNotEmpty(id)" >
         and ID = #{id,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(orgId)" >
         and ORG_ID = #{orgId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(code)" >
         and CODE LIKE '%${code}%'
      </if>
      <if test="@Ognl@isNotEmpty(ip)" >
         and IP LIKE '%${ip}%'
      </if>
      <if test="@Ognl@isNotEmpty(name)" >
         and NAME LIKE '%${name}%'
      </if>
      <if test="@Ognl@isNotEmpty(companyId)" >
         and COMPANY_ID = #{companyId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(ftpId)" >
         and FTP_ID = #{ftpId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(roadId)" >
         and ROAD_ID = #{roadId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(roadRvalue)" >
		 and ROAD_ID IN
		 <foreach collection="roadRvalue" item="roadList" open="(" close=")" separator="," >
			 #{roadList}
      	 </foreach>
      </if>
      <if test="@Ognl@isNotEmpty(roadPid)" >
         and ROAD_ID IN (select r.id from sys_road_info r where r.pid=#{roadPid,jdbcType=VARCHAR})
      </if>
      <if test="@Ognl@isNotEmpty(isshow)" >
         and ISSHOW = #{isshow,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(buildtime)" >
         and BUILDTIME = #{buildtime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(buildispId)" >
         and BUILDISP_ID = #{buildispId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(buildnetworkId)" >
         and BUILDNETWORK_ID = #{buildnetworkId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(powersource)" >
         and POWERSOURCE = #{powersource,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(timeout)" >
         and TIMEOUT = #{timeout,jdbcType=SMALLINT}
      </if>
      <if test="@Ognl@isNotEmpty(note)" >
         and NOTE = #{note,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(isblackanalyse)" >
         and ISBLACKANALYSE = #{isblackanalyse,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(photo1)" >
         and PHOTO1 = #{photo1,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(photo2)" >
         and PHOTO2 = #{photo2,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(photo3)" >
         and PHOTO3 = #{photo3,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(importcode)" >
         and IMPORTCODE = #{importcode,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(license)" >
         and LICENSE = #{license,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(lastdatatime)" >
         and LASTDATATIME = #{lastdatatime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(picmixId)" >
         and PICMIX_ID = #{picmixId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(toporgcode)" >
         and TOPORGCODE = #{toporgcode,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(devicetypecode)" >
         and DEVICETYPECODE LIKE #{devicetypecode,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(trademark)" >
         and TRADEMARK = #{trademark,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(pattern)" >
         and PATTERN = #{pattern,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(efficaciousStime)" >
         and EFFICACIOUS_STIME = #{efficaciousStime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(efficaciousEtime)" >
         and EFFICACIOUS_ETIME = #{efficaciousEtime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(inspectorg)" >
         and INSPECTORG = #{inspectorg,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(inspecttime)" >
         and INSPECTTIME = #{inspecttime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(inspectnumber)" >
         and INSPECTNUMBER = #{inspectnumber,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(mapx)" >
         and MAPX = #{mapx,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(mapy)" >
         and MAPY = #{mapy,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(videoCode)" >
         and VIDEO_CODE = #{videoCode,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(issend)" >
         and ISSEND = #{issend,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(inserttime)" >
       	 and INSERTTIME = #{inserttime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(status)" >
         and STATUS = #{status,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(factoryId)" >
         and FACTORY_ID = #{factoryId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(deviceTypeIds)" >
		 and ID in(select t.device_id from PROPERTY_DEVICE_TYPE t where t.devicetype_id in
		 <foreach collection="deviceTypeIds" item="deviceTypeList" open="(" close=")" separator="," >
              #{deviceTypeList}
      	 </foreach>
      	 )
      </if>
    </where>
    <if test="sortType != null" >
       order by ${sortType} 
    </if>
  </select>
  <!-- 违法设备状态统计 -->
  <select id="getListByConditionVio" resultMap="BaseResultMap" >
		select distinct t.id,t.org_id,t.code,t.ip,t.name,t.company_id,t.ftp_id,t.road_id,
		            t.isshow,t.buildtime,t.buildisp_id,t.buildnetwork_id,t.powersource,
		            t.timeout,t.note,t.isblackanalyse,t.photo1,t.photo2,t.photo3,t.importcode,
		            t.license,t.lastdatatime,t.picmix_id,t.toporgcode,t.devicetypecode,t.trademark,
		            t.pattern,t.efficacious_stime,t.efficacious_etime,t.inspectorg,t.inspecttime,
		            t.inspectnumber,t.mapx,t.mapy,t.video_code,t.issend,t.inserttime,t.status,t.factoryId
		from PROPERTY_DEVICE_INFO t
		left join PROPERTY_DEVICE_TYPE t1 on t.id = t1.device_id
		left join PROPERTY_DEVICETYPE_INFO t2 on t1.devicetype_id = t2.id
		where (t2.id in (select t3.id from PROPERTY_DEVICETYPE_INFO t3 where t3.name = '违法检测' and t3.pid = '00' and t3.levels = '1') 
    	or t2.pid in (select t3.id from PROPERTY_DEVICETYPE_INFO t3 where t3.name = '违法检测' and t3.pid = '00' and t3.levels = '1'))
      <if test="@Ognl@isNotEmpty(orgs)" >
         and ${orgs}
      </if>
      <if test="@Ognl@isNotEmpty(id)" >
         and ID = #{id,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(orgId)" >
         and ORG_ID LIKE #{orgId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(code)" >
         and CODE LIKE '%${code}%'
      </if>
      <if test="@Ognl@isNotEmpty(ip)" >
         and IP LIKE '%${ip}%'
      </if>
      <if test="@Ognl@isNotEmpty(name)" >
         and NAME LIKE '%${name}%'
      </if>
      <if test="@Ognl@isNotEmpty(companyId)" >
         and COMPANY_ID = #{companyId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(ftpId)" >
         and FTP_ID = #{ftpId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(roadId)" >
         and ROAD_ID = #{roadId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(roadRvalue)" >
		 and ROAD_ID IN
		 <foreach collection="roadRvalue" item="roadList" open="(" close=")" separator="," >
			 #{roadList}
      	 </foreach>
      </if>
      <if test="@Ognl@isNotEmpty(roadPid)" >
         and ROAD_ID IN (select r.id from sys_road_info r where r.pid=#{roadPid,jdbcType=VARCHAR})
      </if>
      <if test="@Ognl@isNotEmpty(isshow)" >
         and ISSHOW = #{isshow,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(buildtime)" >
         and BUILDTIME = #{buildtime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(buildispId)" >
         and BUILDISP_ID = #{buildispId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(buildnetworkId)" >
         and BUILDNETWORK_ID = #{buildnetworkId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(powersource)" >
         and POWERSOURCE = #{powersource,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(timeout)" >
         and TIMEOUT = #{timeout,jdbcType=SMALLINT}
      </if>
      <if test="@Ognl@isNotEmpty(note)" >
         and NOTE = #{note,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(isblackanalyse)" >
         and ISBLACKANALYSE = #{isblackanalyse,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(photo1)" >
         and PHOTO1 = #{photo1,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(photo2)" >
         and PHOTO2 = #{photo2,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(photo3)" >
         and PHOTO3 = #{photo3,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(importcode)" >
         and IMPORTCODE = #{importcode,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(license)" >
         and LICENSE = #{license,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(lastdatatime)" >
         and LASTDATATIME = #{lastdatatime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(picmixId)" >
         and PICMIX_ID = #{picmixId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(toporgcode)" >
         and TOPORGCODE = #{toporgcode,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(devicetypecode)" >
         and DEVICETYPECODE LIKE #{devicetypecode,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(trademark)" >
         and TRADEMARK = #{trademark,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(pattern)" >
         and PATTERN = #{pattern,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(efficaciousStime)" >
         and EFFICACIOUS_STIME = #{efficaciousStime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(efficaciousEtime)" >
         and EFFICACIOUS_ETIME = #{efficaciousEtime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(inspectorg)" >
         and INSPECTORG = #{inspectorg,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(inspecttime)" >
         and INSPECTTIME = #{inspecttime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(inspectnumber)" >
         and INSPECTNUMBER = #{inspectnumber,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(mapx)" >
         and MAPX = #{mapx,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(mapy)" >
         and MAPY = #{mapy,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(videoCode)" >
         and VIDEO_CODE = #{videoCode,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(issend)" >
         and ISSEND = #{issend,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(inserttime)" >
       	 and INSERTTIME = #{inserttime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(status)" >
         and STATUS = #{status,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(factoryId)" >
         and FACTORY_ID = #{factoryId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(deviceTypeIds)" >
		 and ID in(select t.device_id from PROPERTY_DEVICE_TYPE t where t.devicetype_id in
		 <foreach collection="deviceTypeIds" item="deviceTypeList" open="(" close=")" separator="," >
              #{deviceTypeList}
      	 </foreach>
      	 )
      </if>
  </select>
  
  <select id="countList" resultType="java.lang.Integer" >
    select count(*) from PROPERTY_DEVICE_INFO
    <where >
      <if test="@Ognl@isNotEmpty(orgs)" >
         and ${orgs}
      </if>
      <if test="@Ognl@isNotEmpty(id)" >
         and ID = #{id,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(orgId)" >
         and ORG_ID = #{orgId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(code)" >
         and CODE LIKE '%${code}%'
      </if>
      <if test="@Ognl@isNotEmpty(ip)" >
         and IP LIKE '%${ip}%'
      </if>
      <if test="@Ognl@isNotEmpty(name)" >
         and NAME LIKE '%${name}%'
      </if>
      <if test="@Ognl@isNotEmpty(companyId)" >
         and COMPANY_ID = #{companyId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(ftpId)" >
         and FTP_ID = #{ftpId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(roadId)" >
         and ROAD_ID = #{roadId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(roadPid)" >
         and ROAD_ID IN (select r.id from sys_road_info r where r.pid=#{roadPid,jdbcType=VARCHAR})
      </if>
      <if test="@Ognl@isNotEmpty(roadRvalue)" >
		 and ROAD_ID IN
		 <foreach collection="roadRvalue" item="roadList" open="(" close=")" separator="," >
			 #{roadList}
      	 </foreach>
      </if>
      <if test="@Ognl@isNotEmpty(isshow)" >
         and ISSHOW = #{isshow,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(buildtime)" >
         and BUILDTIME = #{buildtime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(buildispId)" >
         and BUILDISP_ID = #{buildispId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(buildnetworkId)" >
         and BUILDNETWORK_ID = #{buildnetworkId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(powersource)" >
         and POWERSOURCE = #{powersource,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(timeout)" >
         and TIMEOUT = #{timeout,jdbcType=SMALLINT}
      </if>
      <if test="@Ognl@isNotEmpty(note)" >
         and NOTE = #{note,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(isblackanalyse)" >
         and ISBLACKANALYSE = #{isblackanalyse,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(photo1)" >
         and PHOTO1 = #{photo1,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(photo2)" >
         and PHOTO2 = #{photo2,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(photo3)" >
         and PHOTO3 = #{photo3,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(importcode)" >
         and IMPORTCODE = #{importcode,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(license)" >
         and LICENSE = #{license,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(lastdatatime)" >
         and LASTDATATIME = #{lastdatatime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(picmixId)" >
         and PICMIX_ID = #{picmixId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(toporgcode)" >
         and TOPORGCODE = #{toporgcode,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(devicetypecode)" >
         and DEVICETYPECODE LIKE #{devicetypecode,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(trademark)" >
         and TRADEMARK = #{trademark,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(pattern)" >
         and PATTERN = #{pattern,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(efficaciousStime)" >
         and EFFICACIOUS_STIME = #{efficaciousStime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(efficaciousEtime)" >
         and EFFICACIOUS_ETIME = #{efficaciousEtime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(inspectorg)" >
         and INSPECTORG = #{inspectorg,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(inspecttime)" >
         and INSPECTTIME = #{inspecttime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(inspectnumber)" >
         and INSPECTNUMBER = #{inspectnumber,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(mapx)" >
         and MAPX = #{mapx,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(mapy)" >
         and MAPY = #{mapy,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(videoCode)" >
         and VIDEO_CODE = #{videoCode,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(issend)" >
         and ISSEND = #{issend,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(inserttime)" >
       	 and INSERTTIME = #{inserttime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(status)" >
         and STATUS = #{status,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(factoryId)" >
         and FACTORY_ID = #{factoryId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(deviceTypeIds)" >
		 and ID in(select t.device_id from PROPERTY_DEVICE_TYPE t where t.devicetype_id in
		 <foreach collection="deviceTypeIds" item="deviceTypeList" open="(" close=")" separator="," >
                    #{deviceTypeList}
      	 </foreach>
      	 )
      </if>
    </where>
    <if test="sortType != null" >
       order by ${sortType} 
    </if>
  </select>
  
  <select id="getMaxDeviceCodeNum"  resultType="java.lang.Integer">
    select *  from (select substr(tb.code,15,4) subint, rownum from PROPERTY_DEVICE_INFO tb 
     order by subint desc) where rownum = 1
  </select>
  
	<select id="selectOrgRoadDevCode" resultMap="BaseResultMap" >
  		select org_id,road_id,code from PROPERTY_DEVICE_INFO 
	</select>

   <select id="selectCodesByDepartmentId" resultType="java.lang.String" parameterType="com.xiangxun.atms.module.property.domain.DeviceInfoSearch">
		select code from PROPERTY_DEVICE_INFO 
		<if test="_parameter != null" >
     	 	<include refid="Example_Where_Clause" />
    	</if> 
    	order by nlssort(name,'NLS_SORT=SCHINESE_PINYIN_M')
	</select>
	
	<select id="selectRoadIdByDeviceCode" resultType="java.lang.String" parameterType="java.lang.String">
		select road_id from PROPERTY_DEVICE_INFO  where code=#{0}
	</select>
	
	<select id="selectDevlistByRoadId" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from PROPERTY_DEVICE_INFO
    where ROAD_ID = #{roadId,jdbcType=VARCHAR} 
    order by nlssort(name,'NLS_SORT=SCHINESE_PINYIN_M')
	</select>
	
	<select id="selectDevlistByOrgId" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from PROPERTY_DEVICE_INFO
    where ORG_ID = #{orgId,jdbcType=VARCHAR} 
    order by nlssort(name,'NLS_SORT=SCHINESE_PINYIN_M')
	</select>
  
  <select id="selectDevlistByCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PROPERTY_DEVICE_INFO
    where CODE = #{code,jdbcType=VARCHAR} 
    order by nlssort(name,'NLS_SORT=SCHINESE_PINYIN_M')
  </select>
	<select id="selectDeviceInfos" resultMap="BaseResultMap" >
  		select * from PROPERTY_DEVICE_INFO 
	</select>
   <select id="getDeviceCode" resultType="java.lang.String" >
   ${sql}
  </select>
  
  <select id="selectDevlistByCodeList" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PROPERTY_DEVICE_INFO where 1 = 1
    <if test="@Ognl@isNotEmpty(devCodes)" >
		 and CODE IN (${devCodes})
      </if>
  </select>
  
  <select id="selectDevListByDeviceTypeCode" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select 
    <include refid="Base_Column_List" />
     from PROPERTY_DEVICE_INFO m
     WHERE m.ID IN (SELECT t.device_id FROM PROPERTY_DEVICE_TYPE t WHERE t.devicetype_id in( 
     select   id  from PROPERTY_DEVICETYPE_INFO t where T.CODE=#{0}))
  </select>
  
  <select id="selectDevListByParentDevTypeCode" resultMap="BaseResultMap">
  	select distinct d.* from (
  		select * from PROPERTY_DEVICE_INFO 
  		<where>
	  		<if test="@Ognl@isNotEmpty(orgs)" >
	           ${orgs}
	        </if>
        </where>
  		) d, PROPERTY_DEVICE_TYPE dt, 
  		(select * from PROPERTY_DEVICETYPE_INFO where pid = (select id from PROPERTY_DEVICETYPE_INFO where code = #{deviceTypeCode,jdbcType=VARCHAR})) t 
  	where t.id = dt.devicetype_id and dt.device_id = d.id
  </select>
  
  <select id="findCurruserDeptDev" resultType="java.lang.String" parameterType="java.lang.String">
   select u.deptid from sys_user u where u.id=#{0} and u.deptid in( select t.org_id from PROPERTY_DEVICE_INFO t group by t.org_id)
  </select>
  
  <select id="selectCrossDevList" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" /> from PROPERTY_DEVICE_INFO t 
    where t.id in (select a.device_id from PROPERTY_DEVICE_TYPE a where a.devicetype_id = (select b.id from PROPERTY_DEVICETYPE_INFO b where b.code = 'cross')) 
    order by nlssort(t.name,'NLS_SORT=SCHINESE_PINYIN_M')
  </select>
  
  <select id="countDeviceByCode"  resultType="java.lang.Integer">
     select count(*) from PROPERTY_DEVICE_INFO where code = #{code,jdbcType=VARCHAR}
  </select>
  
  <select id="insertHistoryRecord" parameterType="java.lang.String">
  	insert into PROPERTY_DEVICE_INFO_HIS (<include refid="Base_Column_List" />) 
  	select <include refid="Base_Column_List" /> from PROPERTY_DEVICE_INFO t where t.id=#{0}
  </select>
  
  <select id="updatePrimaryKey" parameterType="java.lang.String">
  	update PROPERTY_DEVICE_INFO t set t.id=#{0} where t.id=#{1}
  </select>
  
  <select id="updateDeviceType">
  	${sql}
  </select>
  
  <select id="getListByFactoryid" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
     from PROPERTY_DEVICE_INFO
    <where >
      <if test="@Ognl@isNotEmpty(orgs)" >
         and ${orgs}
      </if>
      <if test="@Ognl@isNotEmpty(orgId)" >
         and ORG_ID = #{orgId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(factoryId)" >
         and FACTORY_ID = #{factoryId,jdbcType=VARCHAR}
      </if>
      
    </where>
       order by nlssort(name,'NLS_SORT=SCHINESE_PINYIN_M')
  </select>
</mapper>