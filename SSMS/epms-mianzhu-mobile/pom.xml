<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.xiangxun.atms</groupId>
	<artifactId>epms-mianzhu-mobile</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	
	<name>epms-mianzhu-mobile</name>
	<description>绵竹环保移动端后台服务</description>

	<properties>
		<!-- 文件拷贝时的编码 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- 编译时的编码 -->
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
	</properties>
	
	<parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.1.RELEASE</version>
    </parent>

	<dependencies>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

		<dependency>
		    <groupId>com.microsoft.sqlserver</groupId>
		    <artifactId>sqljdbc4</artifactId>
		    <version>4.0</version>
		</dependency>
		<dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>8.4-701.jdbc3</version>
        </dependency>
		
		<dependency>
		    <groupId>com.mchange</groupId>
		    <artifactId>c3p0</artifactId>
		    <version>0.9.5.2</version>
		</dependency>
		<!--mybatis-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.2.0</version>
        </dependency>
        <!--mapper-->
        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper-spring-boot-starter</artifactId>
            <version>1.1.0</version>
        </dependency>
        <!--pagehelper-->
        <dependency>
		    <groupId>com.github.pagehelper</groupId>
		    <artifactId>pagehelper</artifactId>
		    <version>4.1.6</version>
		</dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>2.8.0</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-core</artifactId>
		    <version>4.2.1.RELEASE</version>
		</dependency>
		
		<dependency>
			<groupId>com.xiangxun.atms</groupId>
			<artifactId>mybatis-ext</artifactId>
			<version>1.0</version>
		</dependency>
		
		<dependency>
            <groupId>com.esotericsoftware</groupId>
            <artifactId>reflectasm</artifactId>
            <version>1.11.3</version>
        </dependency>
        
        <dependency>
		    <groupId>commons-configuration</groupId>
		    <artifactId>commons-configuration</artifactId>
		    <version>1.10</version>
		</dependency>
	</dependencies>
	
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		
		<resources>
		    <resource>
		        <directory>src/main/resources</directory>
		        <includes>
		            <include>**/*.xml</include>
		            <include>**/*.properties</include>
		        </includes>
		    </resource>
		    <resource>
		        <directory>src/main/java</directory>
		        <includes>
		            <include>**/*.xml</include>
		            <include>**/*.properties</include>
		        </includes>
		    </resource>
		</resources>
		<testResources>
		    <testResource>
		        <directory>src/test/resources</directory>
		    </testResource>
		</testResources>
		
		<outputDirectory>target/classes</outputDirectory>
		<testOutputDirectory>target/classes</testOutputDirectory>
				
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <!-- assembly版本 -->
                <version>2.2.1</version>
                <executions>
                    <!-- 若要同时打多个包（如windows和linux不同系统的包），可配置多个execution，此处只打zip，因此配置一个 -->
                    <execution>
                        <!-- id标识，唯一即可 -->
                        <id>make-wrapper-win-zip</id>
                        <!-- 设置package阶段进行 -->
                        <phase>package</phase>
                        <goals>
                            <!-- 只运行一次 -->
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <!-- 输出的最终名称，自动添加格式后缀（如zip），当前示例为jsw-test.zip -->
                            <finalName>epms-mobile-server-${version}</finalName>
                            <!-- 配置是否添加id到名称中，若为true，当前示例中，则为jsw-test-zip.zip，false即不添加，只是jsw-test.zip；
                                若同时打多个包，则可设为true，分别添加id以作区分 -->
                            <appendAssemblyId>true</appendAssemblyId>
                            <!-- 打包的输出目录，可自定义，${project.build.directory}为编译输出目录，即target目录 -->
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <descriptors>
                                <!-- 使用的描述符，按此描述进行打包，此处配置一个zip.xml表示打zip包 -->
                                <descriptor>src/main/assembly/wrapper-win-zip.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>