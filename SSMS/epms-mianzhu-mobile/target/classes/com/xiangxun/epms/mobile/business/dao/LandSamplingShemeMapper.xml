<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiangxun.epms.mobile.business.dao.LandSamplingShemeMapper" >
  <resultMap id="BaseResultMap" type="com.xiangxun.epms.mobile.business.domain.LandSamplingSheme" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Thu Jul 13 10:52:23 CST 2017.
    -->
    <id column="ID" property="id" jdbcType="NVARCHAR" />
    <result column="PLAN_ID" property="planId" jdbcType="NVARCHAR" />
    <result column="BLOCK_ID" property="blockId" jdbcType="NVARCHAR" />
    <result column="SAMPLE_CODE" property="sampleCode" jdbcType="NVARCHAR" />
    <result column="SAMPLE_NAME" property="sampleName" jdbcType="NVARCHAR" />
    <result column="CODE" property="code" jdbcType="NVARCHAR" />
    <result column="NAME" property="name" jdbcType="NVARCHAR" />
    <result column="DESCRIBE" property="describe" jdbcType="NVARCHAR" />
    <result column="REGION_ID" property="regionId" jdbcType="NVARCHAR" />
    <result column="REGION_NAME" property="regionName" jdbcType="NVARCHAR" />
    <result column="DEPT" property="dept" jdbcType="NVARCHAR" />
    <result column="CREATE_ID" property="createId" jdbcType="NVARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_ID" property="updateId" jdbcType="NVARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="QUANTITY" property="quantity" jdbcType="INTEGER" />
    <result column="MISSION_ID" property="missionId" jdbcType="NVARCHAR" />
    <result column="MISSION_NAME" property="missionName" jdbcType="NVARCHAR" />
  </resultMap>
  <select id="findAll"  resultMap="BaseResultMap">
   SELECT A.*, REG.NAME SAMPLE_NAME  FROM
   (SELECT SCHEME.ID, SCHEME.PLAN_ID,SCHEME.BLOCK_ID,SCHEME.SAMPLE_CODE,SCHEME.CODE,SCHEME.NAME,SCHEME.DESCRIBE,SCHEME.REGION_ID,
    REGION.NAME REGION_NAME,SCHEME.DEPT,SCHEME.CREATE_ID,SCHEME.CREATE_TIME,SCHEME.UPDATE_ID,SCHEME.UPDATE_TIME,
    SCHEME.STATUS  FROM T_LAND_SAMPLING_SCHEME  SCHEME LEFT JOIN  T_REGION  REGION ON SCHEME.REGION_ID = REGION.ID) A
    LEFT JOIN T_SAMPLING_LAND_REG REG ON A.SAMPLE_CODE = REG.CODE
  </select>
  <select id="findById"  resultMap="BaseResultMap"  parameterType="java.lang.String">
   SELECt B.* ,T_LAND_MISSION.ID  MISSION_ID FROM ( SELECT A.*,REG.NAME SAMPLE_NAME  FROM T_LAND_SAMPLING_SCHEME A LEFT JOIN  SYS_DIC  REG   ON A.SAMPLE_CODE = REG.CODE and REG.type='SAMPLING_TYPES') B   left JOIN T_LAND_MISSION ON B.id = T_LAND_MISSION.SCHEME_ID 
     WHERE  B.ID IN (select SCHEME_ID from  T_LAND_MISSION m where m.MISSION_STATUS=1 and m.STATUS=0 ) and B.ID=#{id}
  </select>
   <select id="findAllByFinsh"  resultMap="BaseResultMap" >
   Select C.ID ,C.SAMPLE_NAME,C.NAME ,DEPT,C.MISSION_NAME,C.MISSION_ID, R.NAME REGION_NAME from
   ( SELECt B.* ,T_LAND_MISSION.ID  MISSION_ID,T_LAND_MISSION.NAME MISSION_NAME FROM ( SELECT A.*,REG.NAME SAMPLE_NAME  FROM T_LAND_SAMPLING_SCHEME A LEFT JOIN  SYS_DIC  REG   ON A.SAMPLE_CODE = REG.CODE and REG.type='SAMPLING_TYPES') B   left JOIN T_LAND_MISSION ON B.id = T_LAND_MISSION.SCHEME_ID )
    C LEFT JOIN  T_REGION  R ON C.REGION_ID = R.ID  
     WHERE C.PLAN_ID IN ( SELECT PP.ID FROM      
     T_LAND_SAMPLING_PLAN PP  WHERE PP.IS_FINISH =0 ) and C.ID IN (select SCHEME_ID from  T_LAND_MISSION m where m.MISSION_STATUS=1 and m.STATUS=0 )
       <if test="@Ognl@isNotEmpty(resTime)"  >
		   and (C.UPDATE_TIME <![CDATA[>=]]>  cast(#{resTime} as datetime ) 
		   or C.CREATE_TIME  <![CDATA[>=]]> cast(#{resTime} as datetime ))
		</if>
		ORDER BY  C.CREATE_TIME DESC ,C.UPDATE_TIME DESC  
  </select>
  <select id="findAllBySelective"  resultMap="BaseResultMap">
     Select C.ID ,C.SAMPLE_NAME,C.NAME ,C.DEPT,C.MISSION_NAME,C.MISSION_ID,C.REGION_ID, R.NAME REGION_NAME from
     ( SELECt B.*, T_LAND_MISSION.ID  MISSION_ID,T_LAND_MISSION.NAME MISSION_NAME FROM ( SELECT A.*,REG.NAME SAMPLE_NAME  FROM T_LAND_SAMPLING_SCHEME A LEFT JOIN  SYS_DIC  REG   ON A.SAMPLE_CODE = REG.CODE and REG.type='SAMPLING_TYPES') B   left JOIN T_LAND_MISSION ON B.id = T_LAND_MISSION.SCHEME_ID ) 
     C LEFT JOIN  T_REGION  R ON C.REGION_ID = R.ID   
     WHERE  C.ID IN (select SCHEME_ID from  T_LAND_MISSION m  )  
   
      <if test="@Ognl@isNotEmpty(name)" >  
         AND C.NAME  LIKE '%${name}%'  
      </if>
      <if test="@Ognl@isNotEmpty(regionId)" >  
         AND C.REGION_ID  = '${regionId}'  
      </if>
      <if test="@Ognl@isNotEmpty(missionName)" >  
         AND C.MISSION_NAME  LIKE  '%${missionName}%'  
      </if>
        ORDER BY  C.CREATE_TIME DESC ,C.UPDATE_TIME DESC    
     
  </select>
  <select id="countlist"  resultType="java.lang.Integer">
   SELECT count(*)  FROM ( SELECt B.*, T_LAND_MISSION.ID  MISSION_ID,T_LAND_MISSION.NAME MISSION_NAME FROM ( SELECT A.*,REG.NAME SAMPLE_NAME  FROM T_LAND_SAMPLING_SCHEME A LEFT JOIN  SYS_DIC  REG   ON A.SAMPLE_CODE = REG.CODE and REG.type='SAMPLING_TYPES') B   left JOIN T_LAND_MISSION ON B.id = T_LAND_MISSION.SCHEME_ID ) 
     C LEFT JOIN  T_REGION  R ON C.REGION_ID = R.ID   
     WHERE  C.ID IN (select SCHEME_ID from  T_LAND_MISSION m  )  
   
      <if test="@Ognl@isNotEmpty(name)" >  
         AND C.NAME  LIKE '%${name}%'  
      </if>
      <if test="@Ognl@isNotEmpty(name)" >  
         AND C.REGION_ID  = '${regionId}'  
      </if>
     <if test="@Ognl@isNotEmpty(missionName)" >  
         AND C.MISSION_NAME  like '%${missionName}%'  
      </if>
   
  </select>
</mapper>