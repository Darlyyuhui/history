<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiangxun.epms.mobile.business.dao.LandBlockErrorMapper" >
  <resultMap id="BaseResultMap" type="com.xiangxun.epms.mobile.business.domain.LandBlockError" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Thu Jul 20 18:08:31 CST 2017.
    -->
    <id column="ID" property="id" jdbcType="NVARCHAR" />
    <result column="LAND_BLOCK_ID" property="landBlockId" jdbcType="NVARCHAR" />
    <result column="LAND_BLOCK_NAME" property="landBlockName" jdbcType="NVARCHAR" />
    <result column="LONGITUDE" property="longitude" jdbcType="DECIMAL" />
    <result column="LATITUDE" property="latitude" jdbcType="DECIMAL" />
    <result column="ERROR_TIME" property="errorTime" jdbcType="TIMESTAMP" />
    <result column="DESCRIBE" property="describe" jdbcType="NVARCHAR" />
    <result column="REGION_ID" property="regionId" jdbcType="NVARCHAR" />
    <result column="CREATE_ID" property="createId" jdbcType="NVARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_ID" property="updateId" jdbcType="NVARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    
    ID, LAND_BLOCK_ID, LONGITUDE, LATITUDE, ERROR_TIME, DESCRIBE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    
    select 
    <include refid="Base_Column_List" />
    from T_LAND_BLOCK_ERROR
    where ID = #{id,jdbcType=NVARCHAR}
  </select>
  
  <insert id="insertSelective" parameterType="com.xiangxun.epms.mobile.business.domain.LandBlockError" useGeneratedKeys="true" keyProperty="id" >
    insert into T_LAND_BLOCK_ERROR
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="@Ognl@isNotEmpty(id)" >
        ID,
      </if>
      <if test="@Ognl@isNotEmpty(landBlockId)" >
        LAND_BLOCK_ID,
      </if>
      <if test="@Ognl@isNotEmpty(longitude)" >
        LONGITUDE,
      </if>
      <if test="@Ognl@isNotEmpty(latitude)" >
        LATITUDE,
      </if>
      <if test="@Ognl@isNotEmpty(errorTime)" >
        ERROR_TIME,
      </if>
      <if test="@Ognl@isNotEmpty(describe)" >
        DESCRIBE,
      </if>
      <if test="@Ognl@isNotEmpty(createId)" >
        CREATE_ID,
      </if>
      <if test="@Ognl@isNotEmpty(createTime)" >
        CREATE_TIME,
      </if>
      <if test="@Ognl@isNotEmpty(updateId)" >
        UPDATE_ID,
      </if>
      <if test="@Ognl@isNotEmpty(updateTime)" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="@Ognl@isNotEmpty(id)" >
        #{id,jdbcType=NVARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(landBlockId)" >
        #{landBlockId,jdbcType=NVARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(longitude)" >
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="@Ognl@isNotEmpty(latitude)" >
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="@Ognl@isNotEmpty(errorTime)" >
        #{errorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(describe)" >
        #{describe,jdbcType=NVARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(createId)" >
        #{createId,jdbcType=NVARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(createTime)" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(updateId)" >
        #{updateId,jdbcType=NVARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(updateTime)" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
 
  <update id="updateByPrimaryKeySelective" parameterType="com.xiangxun.epms.mobile.business.domain.LandBlockError" >
   
    update T_LAND_BLOCK_ERROR
    <set >
      <if test="@Ognl@isNotEmpty(landBlockId)" >
        LAND_BLOCK_ID = #{landBlockId,jdbcType=NVARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(longitude)" >
        LONGITUDE = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="@Ognl@isNotEmpty(latitude)" >
        LATITUDE = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="@Ognl@isNotEmpty(errorTime)" >
        ERROR_TIME = #{errorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(describe)" >
        DESCRIBE = #{describe,jdbcType=NVARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(createId)" >
        CREATE_ID = #{createId,jdbcType=NVARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(createTime)" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(updateId)" >
        UPDATE_ID = #{updateId,jdbcType=NVARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(updateTime)" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=NVARCHAR}
  </update>
  
  <select id="getListByCondition" resultMap="BaseResultMap" >
    select c.* FROM 
      (select E.ID, E.LAND_BLOCK_ID,E.LONGITUDE, E.LATITUDE,E.CREATE_TIME,E.UPDATE_TIME, E.ERROR_TIME, E.DESCRIBE ,B.REGION_ID REGION_ID, B.NAME  LAND_BLOCK_NAME  
     from T_LAND_BLOCK_ERROR E left join  T_LAND_BLOCK B  on  E.LAND_BLOCK_ID=B.ID  ) C  
    <where >
      <if test="@Ognl@isNotEmpty(id)" >
         and C.ID = #{id,jdbcType=NVARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(landBlockId)" >
         and C.LAND_BLOCK_ID = #{landBlockId,jdbcType=NVARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(longitude)" >
         and C.LONGITUDE = #{longitude,jdbcType=DECIMAL}
      </if>
      <if test="@Ognl@isNotEmpty(latitude)" >
         and C.LATITUDE = #{latitude,jdbcType=DECIMAL}
      </if>
      <if test="@Ognl@isNotEmpty(errorTime)" >
         and C.ERROR_TIME = #{errorTime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(describe)" >
         and C.DESCRIBE = #{describe,jdbcType=NVARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(createId)" >
         and C.CREATE_ID = #{createId,jdbcType=NVARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(createTime)" >
         and C.CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(updateId)" >
         and C.UPDATE_ID = #{updateId,jdbcType=NVARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(updateTime)" >
         and C.UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(regionId)" >
         and C.REGION_ID = #{regionId,jdbcType=NVARCHAR}
      </if>
    </where>
    ORDER BY  C.CREATE_TIME DESC ,C.UPDATE_TIME DESC ,C. ERROR_TIME 
  </select>
  <select id="countList" resultType="java.lang.Integer" >
    select count(*) from T_LAND_BLOCK_ERROR
    <where >
      <if test="@Ognl@isNotEmpty(id)" >
         and ID = #{id,jdbcType=NVARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(landBlockId)" >
         and LAND_BLOCK_ID = #{landBlockId,jdbcType=NVARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(longitude)" >
         and LONGITUDE = #{longitude,jdbcType=DECIMAL}
      </if>
      <if test="@Ognl@isNotEmpty(latitude)" >
         and LATITUDE = #{latitude,jdbcType=DECIMAL}
      </if>
      <if test="@Ognl@isNotEmpty(errorTime)" >
         and ERROR_TIME = #{errorTime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(describe)" >
         and DESCRIBE = #{describe,jdbcType=NVARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(createId)" >
         and CREATE_ID = #{createId,jdbcType=NVARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(createTime)" >
         and CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="@Ognl@isNotEmpty(updateId)" >
         and UPDATE_ID = #{updateId,jdbcType=NVARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(updateTime)" >
         and UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
</mapper>